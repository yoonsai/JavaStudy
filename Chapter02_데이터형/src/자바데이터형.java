/*
 *  2023-09-12
 *  1. 목표
 *     = 데이터형 (메모리 공안의 크기)
 *     = 변수 / 상수
 *     = 연산자 (가공)
 *     ------------------------- 제어문 / 객체지향 / 예외처리 / 클래스의 종류  / 재사용(is-a, has-a)
 *  2. 프로그램의 기본
 *     = 데이터 저장하는 방법
 *     = 데이터를 한개만 저장 : 변수 / 상수 , 리터럴 : 실제 저장할 값
 *                         ---- 메모리 저장 공간의 별칭
 *                              ----- 주소 (0~...)
 *       자바의 메모리 구조
 *       -------------------
 *       메소드 영역 = > method. static
 *       -------------------
 *       스택 => 지역변수, 매개변수 ==> 메모리 자체 관리       
 *       -------------------
 *       heap => 클래스 블록 ===> 사용자가 관리 (자동 메모리 회수 : 가비지컬렉션)
 *       -------------------
 *       
 *       프로그램 => 데이터관리 (vue. React)
 *       실제 메모리 (RAM) => 휘발성 메모리 => 프로그램이 종료하면 저장\
 *       
 *       100을 저장
 *      0-------------
 *       사용중
 *      4-------------
 *       사용중
 *      8-------------
 *       100 ==> 이름부여 : a (저장된 위치에 이름 부여= 변수, 4번지씩 나눠져있음 = 4바이트씩 = int())       
 *     12-------------
 *       
 *     16-------------
 *       
 *     20-------------
 *     
 *     
 *     메모리 크기 => 속도
 *     
 *     => 자바에서 제공하는 메모리크기(자료형, 데이터형)
 *        정수
 *          byte => 1바이트 (8bit) => 0,1을 8개 저장하는 공간
 *          --------------------------------------------
 *           부호비트  ㅣ  1   ㅣ  1   ㅣ  1   ㅣ 1   ㅣ  1  ㅣ  1  ㅣ  1   ㅣ
 *          --------------------------------------------
 *           ㅣㅡ>  양수(0) / 음수(1)
 *           
 *           01111111 가장 큰숫자
 *           -----------------
 *           2^0*1 = 1
 *           2^1*1
 *           2^2*1
 *           2^3*1
 *           2^4*1
 *           2^5*1
 *           2^6*1
 *           2^7*1 = 64
 *           ---------------------127까지 들어갈 수 있음
 *           음수일땐 2의 보수        + 1   = -128
 *           ----------------------------------- -128~127까지 표현가능
 *           주료 사용처 = 파일 읽기/ 쓰기 / 업로드 /다운로드시 사용
 *                                    
 *           
 *          short : 2바이트 (16비트) => c언어 호환성 => 사용빈도가 거의 없다 => -32768~32767
 *          int 4바이트 => 일반적인 모든 숫자는 인트 = > default => -21억 4천 ~ 21억 4천
 *          long 8바이트(64비트) 빅데이터/ 금융권
 *          ---------------------------------
 *          int랑 long이랑 구분할때
 *          L(1) => 100L(=long) / 100(=int)
 *          
 *        실수
 *          float:4byte /10.5F(=float) => 소수점 이하 6자리까지
 *          double:8byte =>default
 *             10.5(double), 10.5d(d) => 소수점 이하 15자리까지
 *             -------------------------
 *             
 *        문자 : char => 2byte(멀티 바이트)
 *              --------------------------
 *              1byte(아스키)-> c/c++ => 범위 (0~256) , 2byte(유니코드) -> 자바 (0~65535) // 한굴(자음+모음)=한글자당 2바이트 => UTF-8 (unicode transform format) - 한글깨짐 방지
 *               --------------------------
 *               사용법 : 한개의 문자만 사용가능 'a' =>  글자마다 번호가 있음 (A는 65번, a는 97번)
 *               연산처리 => 정수형으로 자동변환
 *               => 'A' + 1 = 65+1 = 66
 *               => '0' = 48
 *               => 'a' = 97
 *                             
 *        논리 : boolean (1byte) => true/false 만 저장 가능 => 조건문에서 사용
 *        
 *        30페이지
 *        -----------------------------------------------------
 *        참조형(사용자 정의) : 배열, 클래스
 *        
 *        ** 자바는 대소문자 구분함, 명령이 끝나면 ; 찍어야함
 */
public class 자바데이터형 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
