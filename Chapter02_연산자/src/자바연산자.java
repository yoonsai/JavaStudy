/*
 * 연산자 / 피연산자(대상)
 * 
 * 10 + 20 => +는 연산자고 10,20은 피연산자
 * -------------------------------------
 * 피연산자 1개 (단항연산자) => -10(음수로 바꿔줄때도)
 *       2개 (이항연산자)
 *       3개 (삼항연산자)
 *       
 *       1. 단항연산자
 *        1) 증감연산자 (한개증가, 한개감소) ++,-- => 반복문에서 많이 쓰임
 *           ++a;
 *        2) 부정연산자 : boolean만 가능
 *           boolean b=false;
 *           b=!b; ==> true
 *        3) 형변환 연산자 : (int)'a'
 *           =UpCasting 작은걸 큰 데이터형으로 바꿔줌 =>자동 형변환 / 예시: int a='A'; 65로저장
 *           =DownCasting 작은 데이터형으로 바꿔줌 =>강제 형변환
 *        4) 기타 (~:반전연산자(양수=>음수, 음수=>양수)), . , []
 *       2. 이항 연산자 
 *        1) 산술연산자 (+, -, *, / %)
 *           + : 산술연산, 문자열 결합(""로 써야댐)
 *               5+6=11
 *               "5"+6=56
 *               5+"7"+6="576"
 *               7+7+"7"= 14+"7"="147"
 *               
 *           나누기 : 정수/정수=정수
 *                  10/3==>3
 *                  0으로 나눌경우에는 오류 발생 ==> 단위테스트 (Junit)
 *           나머지 : 10%3 ==>1
 *                  9%4 ==>1
 *                  10%2 ==>0
 *                  
 *                  부호
 *                  5%2 == 1
 *                  -5%2 ==-1
 *                  5%-2 ==1
 *                  -5%-2 ==-1
 *                  부호는 왼쪽편 부호를 따라간다
 *               
 *        2) 시프트연산자 (<<, >>) 비트이동 연산자
 *           (1) << 왼쪽으로 이동
 *               2진법으로 해서 왼쪽으로 이동한다음 이동한만큼 0으로 채워주고 다시 10진법으로 바꿔줌
 *               =이동한만큼(n), 원래 숫자에서 2의n제곱을 곱해줌 (쉬운방법)
 *               => 11<<3 ==> 11*2^3 = 88
 *               
 *           (2) >> 오른쪽으로 이동
 *               2진법으로 변환해서 오른쪽으로 이동한만큼 버림, 다시 10진법으로
 *               10>>2 ==> 10/4
 *               
 *        3) 비트연산자 ( &, |, ^) 
 *           &(*) |(+) ^(다른비트)
 *           -------------------------
 *                  &(*)  |(+)  ^(다른비트)
 *           -------------------------
 *           0* 0     0    0       0
 *           -------------------------
 *           0* 1     0    1       1
 *           -------------------------
 *           1* 0     0    1       1
 *           -------------------------
 *           1* 1     1    1       0 
 *           -------------------------
 *           10 & 14 = > 1010*1110 => 1010 = 10
 *           21 & 6 => 10101 * 00110 => 00100 = 4
 *             32 16 8 4 2 1
 *                 1 0 1  0 1
 *           -----------------------------------------
 *           |(+) => 1이 하나라도 있으면 1  
 *           10 | 14 = > 1010+1110 =>1110 =28    
 *           -----------------------------------------
 *           ^(다른비트) => 둘이 같으면 0, 다르면 1 = xor연산
 *           10 ^ 14 = > 1010^1110=>0100=4
 *               
 *        4) 비교연산자 (==, !=, >, <, <=, >=)
 *           결과값은 boolean (true/false)
 *           ===================> 정수/실수/문자/논리(==,!=) ==> 문자열은 계산불가(equals,compare로 해야함)
 *           같다, 같지않다
 *           (==,!=)
 *           오라클:=,<>
 *           자바스크립트 :===,!==   
 *           
 *        5) 논리연산자 (&&. ||)
 *           && : 직렬연산자
 *           || : 병렬연산자
 *           -----------------------------
 *           (조건)&&(조건) = 둘다 true여야 true : 범위나 기간 포함;
 *           (조건)||(조건) = 둘 중 하나만 true여도 true : 범위를 벗어난 경우?
 *           
 *        6) 대입연산자 (=, +=, -=, *=, /=,%=...)  
 *                       -------------------복합대입연산자
 *           int a=10;
 *           int b=20;
 *           int c=a+b;
 *                 +가 우선순위 => 더하고 대입
 *           
 *           int a=10;
 *           a++; // 한개증가
 *           
 *           int a=10;
 *           a+=10 => a+10해서 a에 대입해라
 *           
 *           int a=100;
 *           a+=20; =>a+20을 a에 대입해라
 *           
 *           int a=100;
 *           a-=10; =>a-10을 a에 대입해라
 */ 
public class 자바연산자 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int a,b;
		a=b=7;
		char c='7';
		System.out.println(~100);
		System.out.println(a+c+b);
		System.out.println(Integer.toBinaryString(21));
	}

}
